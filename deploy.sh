#!/bin/bash
set -e

# ===============================
# üöÄ Personal Portal ‚Äî Deploy Script (frontend env + backend env)
# ===============================
# –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑:
#   npm run deploy
# –∏–ª–∏ –≤—Ä—É—á–Ω—É—é:
#   bash deploy.sh
#
# üîß –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
# 1. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ .env —Ñ–∞–π–ª—ã —Ñ—Ä–æ–Ω—Ç–∞ –∏ –±—ç–∫–∞
# 2. –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–¥ –∏–∑ GitHub
# 3. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç .env —Ñ–∞–π–ª—ã
# 4. –°–æ–±–∏—Ä–∞–µ—Ç —Ñ—Ä–æ–Ω—Ç –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±—ç–∫
# 5. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç nginx –∏ API
# ===============================

PROJECT_DIR="/var/www/personal-portal"
BACKEND_DIR="$PROJECT_DIR/backend"
BRANCH="main"
SERVICE_NAME="personal-portal-backend"
BACKUP_DIR="/tmp/personal-portal-env-backup"

mkdir -p "$BACKUP_DIR"

# --- –ü—É—Ç–∏ –∫ env-—Ñ–∞–π–ª–∞–º ---
ENV_FILES_FRONT=(
  "$PROJECT_DIR/.env"
  "$PROJECT_DIR/.env.production"
  "$PROJECT_DIR/.env.development"
)
ENV_FILES_BACK=(
  "$BACKEND_DIR/.env"
)

echo "=== üöÄ Starting deploy at $(date) ==="
cd "$PROJECT_DIR" || { echo "‚ùå ERROR: Project folder not found"; exit 1; }

# --- 0Ô∏è‚É£ BACKUP ENV FILES ---
echo "üíæ Backing up environment files..."
for FILE in "${ENV_FILES_FRONT[@]}" "${ENV_FILES_BACK[@]}"; do
  if [ -f "$FILE" ]; then
    BASENAME=$(basename "$FILE")
    cp "$FILE" "$BACKUP_DIR/$BASENAME"
    echo "‚úÖ Saved $BASENAME"
  else
    echo "‚ö†Ô∏è Skipped missing $FILE"
  fi
done

# --- 1Ô∏è‚É£ GIT UPDATE ---
echo "üì¶ Updating repository..."
if ! git fetch origin "$BRANCH"; then
  echo "‚ö†Ô∏è Git fetch failed! –ü—Ä–æ–≤–µ—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub."
  exit 1
fi

if ! git reset --hard "origin/$BRANCH"; then
  echo "‚ö†Ô∏è Git reset failed! –í–æ–∑–º–æ–∂–Ω–æ, –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä—É—é—Ç pull."
  echo "–ò—Å–ø–æ–ª—å–∑—É–π 'git status' –∏ 'git stash' –≤—Ä—É—á–Ω—É—é."
  exit 1
fi

# --- 2Ô∏è‚É£ RESTORE ENV FILES ---
echo "‚ôªÔ∏è Restoring environment files..."
for FILE in "${ENV_FILES_FRONT[@]}" "${ENV_FILES_BACK[@]}"; do
  BASENAME=$(basename "$FILE")
  TARGET_DIR=$(dirname "$FILE")
  if [ -f "$BACKUP_DIR/$BASENAME" ]; then
    mv "$BACKUP_DIR/$BASENAME" "$TARGET_DIR/$BASENAME"
    echo "‚úÖ Restored $BASENAME"
  fi
done

# --- 3Ô∏è‚É£ FRONTEND ---
echo "üß© Installing frontend dependencies..."
if ! npm ci --no-audit --no-fund; then
  echo "‚ö†Ô∏è npm install failed! –ü–æ–ø—Ä–æ–±—É–π –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à: 'sudo rm -rf node_modules package-lock.json && npm install'"
  exit 1
fi

echo "üèóÔ∏è Building frontend..."
if ! npm run build; then
  echo "‚ùå Frontend build failed! –ü—Ä–æ–≤–µ—Ä—å vite.config.js –∏ –æ—à–∏–±–∫–∏ –≤—ã—à–µ."
  exit 1
fi

# --- 4Ô∏è‚É£ BACKEND ---
echo "üõ†Ô∏è Updating backend..."
cd "$BACKEND_DIR" || { echo "‚ùå Backend folder missing"; exit 1; }

if ! npm ci --no-audit --no-fund; then
  echo "‚ö†Ô∏è Backend npm install failed! –ü–æ–ø—Ä–æ–±—É–π —É–¥–∞–ª–∏—Ç—å node_modules –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–Ω–æ–≤–æ."
  exit 1
fi

echo "‚ôªÔ∏è Restarting backend service..."
if systemctl is-active --quiet "$SERVICE_NAME"; then
  sudo systemctl restart "$SERVICE_NAME"
else
  echo "‚ö†Ô∏è Backend service not active ‚Äî trying to start it..."
  sudo systemctl start "$SERVICE_NAME"
fi

# --- 5Ô∏è‚É£ NGINX ---
echo "üåê Reloading Nginx..."
if ! sudo nginx -t; then
  echo "‚ùå Nginx config error! –ü—Ä–æ–≤–µ—Ä—å /etc/nginx/sites-available/personal-portal"
  exit 1
fi

sudo systemctl reload nginx

# --- 6Ô∏è‚É£ HEALTH CHECK ---
echo "ü©∫ Checking backend health..."
sleep 2
if curl -fs http://127.0.0.1:4000/api/ >/dev/null; then
  echo "‚úÖ Local backend is running"
else
  echo "‚ö†Ô∏è Backend may not be responding locally"
fi

if curl -fs -k https://samoshechkin.ru/api/ >/dev/null; then
  echo "‚úÖ Public API reachable at https://samoshechkin.ru/api/"
else
  echo "‚ö†Ô∏è Public API unreachable! –ü—Ä–æ–≤–µ—Ä—å nginx proxy_pass –∏–ª–∏ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã."
fi

echo "=== ‚úÖ Deploy complete at $(date) ==="
